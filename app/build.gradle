apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.appdistribution'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding = true
    }
    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }
    defaultConfig {
        applicationId "co.nz.freddit"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }
    flavorDimensions "environment"

    productFlavors {
        envDevelop {
            dimension "environment"
            applicationIdSuffix ".develop"
            versionNameSuffix "-develop"
        }
        envProd {
            firebaseAppDistribution {
                groups="qa"
            }
            dimension "environment"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:1.3.1"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    // Android Lifecycle
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //Kotlin Coroutines
    def coroutines_version = "1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //Room
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Navigation
    def nav_version = "2.3.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "com.google.android.material:material:1.1.0"
    implementation "com.google.firebase:firebase-analytics:17.4.4"

    //Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //Gson
    implementation "com.google.code.gson:gson:2.8.6"

    //Hilt
    implementation "com.google.dagger:hilt-android:2.28.1-alpha"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    kapt "com.google.dagger:hilt-android-compiler:2.28.1-alpha"
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"

    //Paging
    def paging_version = "2.1.2"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version" // For Kotlin use paging-runtime-ktx
    // alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common-ktx:$paging_version" // For Kotlin use paging-common-ktx

    testImplementation "junit:junit:4.13"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.0.9"
}


def loadFileProperties(fileName) {
    def file = new File(fileName)
    if (!file.canRead()) {
        return [].asCollection()
    }

    def props = new Properties()
    props.load(new FileInputStream(file))
    return props.entrySet()
}

tasks.whenTaskAdded { task ->
    if (task.name ==~ /^generate.*BuildConfig$/) {
        task.dependsOn "${task.name}Params"
    }
}

android.buildTypes.all { bt ->
    android.productFlavors.all { pf ->
        task("generate${pf.name.capitalize()}${bt.name.capitalize()}BuildConfigParams") {
            [
                    loadFileProperties("shared.properties"),
                    loadFileProperties("${pf.name}.properties"),
                    loadFileProperties("${pf.name}.properties.override")
            ].flatten().each { prop ->
                pf.buildConfigField("String", prop.key, "\"${prop.value}\"")
            }
        }
    }
}